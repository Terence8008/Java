package assignment;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.io.BufferedWriter;



        
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author caesa
 */
public class AdminMain extends javax.swing.JFrame {
    ArrayList<Lecturer> lecturers = new ArrayList<>();
    ArrayList<Student> students = new ArrayList<>();
    String Lecturerfile = FileIO.lecturerFilepath;
    String Studentfile =  FileIO.studentFilepath;
    
    /**
     * Creates new form AdminMain
     * @param lecturers
     * @param students
     */
    public AdminMain(ArrayList<Lecturer> lecturers, ArrayList<Student> students) {
        this.lecturers = lecturers;
        this.students = students;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EditLecturer = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        EditLecEmailField = new javax.swing.JTextField();
        EditLecNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        EditLecUpdateBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        EditLecPMCheckBox = new javax.swing.JCheckBox();
        EditLecCancelBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        EditLecIDLbl = new javax.swing.JLabel();
        EditLecPassField = new javax.swing.JTextField();
        EditStudent = new javax.swing.JDialog();
        EditStdNameField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        EditStdIntakeField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        EditStdUpdBtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        EditStdEmailField = new javax.swing.JTextField();
        EditStdCancelBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        EditStdIDLbl = new javax.swing.JLabel();
        EditStdPassField = new javax.swing.JTextField();
        RegisterLecturer = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        RegLecBtn = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        RegLecEmailField = new javax.swing.JTextField();
        RegLecNameField = new javax.swing.JTextField();
        PmRoleLabel = new javax.swing.JLabel();
        RegLecCloseBtn = new javax.swing.JButton();
        RegLecPmCheckBox = new javax.swing.JCheckBox();
        RegLecPassField = new javax.swing.JTextField();
        RegisterStudent = new javax.swing.JDialog();
        jLabel20 = new javax.swing.JLabel();
        RegStdNameField = new javax.swing.JTextField();
        RegStdBtn = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        RegStdEmailField = new javax.swing.JTextField();
        RegStdCloseBtn = new javax.swing.JButton();
        RegStdPassField = new javax.swing.JTextField();
        RegStdIntakeField = new javax.swing.JTextField();
        LecturersList = new javax.swing.JDialog();
        LecturerSearchField = new javax.swing.JTextField();
        SearchLecBtn = new javax.swing.JButton();
        DeleteLecturerBtn = new javax.swing.JButton();
        LecListEditBtn = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LecturerListTable = new javax.swing.JTable();
        LecListCloseBtn = new javax.swing.JButton();
        StudentsList = new javax.swing.JDialog();
        StudentSearchField = new javax.swing.JTextField();
        SearchStudBtn = new javax.swing.JButton();
        DeleteStdBtn = new javax.swing.JButton();
        StdListEditBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        StudentListTable = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        StdListCloseBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        RegStdMainBtn = new javax.swing.JButton();
        LecListMainBtn = new javax.swing.JButton();
        RegLecMainBtn = new javax.swing.JButton();
        StudListMainBtn = new javax.swing.JButton();
        SaveNLogOut = new javax.swing.JButton();

        jLabel4.setText("Email");

        EditLecEmailField.setToolTipText("");

        EditLecNameField.setActionCommand("<Not Set>");

        jLabel2.setText("Password");

        jLabel3.setText("Name");

        EditLecUpdateBtn.setText("Update");
        EditLecUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditLecUpdateBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("PM");

        EditLecCancelBtn.setText("Cancel");
        EditLecCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditLecCancelBtnActionPerformed(evt);
            }
        });

        jLabel8.setText("ID");

        EditLecIDLbl.setText("ID");

        EditLecPassField.setToolTipText("");

        javax.swing.GroupLayout EditLecturerLayout = new javax.swing.GroupLayout(EditLecturer.getContentPane());
        EditLecturer.getContentPane().setLayout(EditLecturerLayout);
        EditLecturerLayout.setHorizontalGroup(
            EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditLecturerLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(EditLecturerLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditLecPMCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditLecPassField, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)))
                    .addGroup(EditLecturerLayout.createSequentialGroup()
                        .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EditLecNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                            .addComponent(EditLecEmailField)
                            .addComponent(EditLecIDLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(161, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditLecturerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EditLecUpdateBtn)
                .addGap(18, 18, 18)
                .addComponent(EditLecCancelBtn)
                .addGap(159, 159, 159))
        );
        EditLecturerLayout.setVerticalGroup(
            EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditLecturerLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(EditLecIDLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EditLecNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditLecEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditLecPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditLecPMCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(EditLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditLecUpdateBtn)
                    .addComponent(EditLecCancelBtn))
                .addGap(159, 159, 159))
        );

        EditStdNameField.setActionCommand("<Not Set>");

        jLabel10.setText("Password");

        jLabel11.setText("Name");

        EditStdIntakeField.setToolTipText("");

        jLabel13.setText("Intake Code");

        EditStdUpdBtn.setText("Update");
        EditStdUpdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditStdUpdBtnActionPerformed(evt);
            }
        });

        jLabel14.setText("Email");

        EditStdEmailField.setToolTipText("");

        EditStdCancelBtn.setText("Cancel");
        EditStdCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditStdCancelBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Edit Student Information");

        jLabel6.setText("ID");

        EditStdIDLbl.setText("jLabel8");

        EditStdPassField.setToolTipText("");

        javax.swing.GroupLayout EditStudentLayout = new javax.swing.GroupLayout(EditStudent.getContentPane());
        EditStudent.getContentPane().setLayout(EditStudentLayout);
        EditStudentLayout.setHorizontalGroup(
            EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditStudentLayout.createSequentialGroup()
                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditStudentLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(EditStudentLayout.createSequentialGroup()
                                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EditStdIntakeField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EditStdIDLbl)
                                    .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(EditStdNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                                        .addComponent(EditStdEmailField))
                                    .addComponent(EditStdPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16))
                            .addGroup(EditStudentLayout.createSequentialGroup()
                                .addComponent(EditStdUpdBtn)
                                .addGap(39, 39, 39)))
                        .addComponent(EditStdCancelBtn))
                    .addGroup(EditStudentLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel5)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        EditStudentLayout.setVerticalGroup(
            EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditStudentLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addGap(40, 40, 40)
                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(EditStdIDLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EditStdNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditStdEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditStdIntakeField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditStdPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addGroup(EditStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditStdUpdBtn)
                    .addComponent(EditStdCancelBtn))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jLabel15.setText("Password");

        jLabel16.setText("Name");

        RegLecBtn.setText("Register");
        RegLecBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegLecBtnActionPerformed(evt);
            }
        });

        jLabel17.setText("Email");

        RegLecEmailField.setToolTipText("");

        RegLecNameField.setActionCommand("<Not Set>");

        PmRoleLabel.setText("Pm role");

        RegLecCloseBtn.setText("Close");
        RegLecCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegLecCloseBtnActionPerformed(evt);
            }
        });

        RegLecPassField.setToolTipText("");

        javax.swing.GroupLayout RegisterLecturerLayout = new javax.swing.GroupLayout(RegisterLecturer.getContentPane());
        RegisterLecturer.getContentPane().setLayout(RegisterLecturerLayout);
        RegisterLecturerLayout.setHorizontalGroup(
            RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterLecturerLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegisterLecturerLayout.createSequentialGroup()
                        .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RegisterLecturerLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterLecturerLayout.createSequentialGroup()
                                .addComponent(PmRoleLabel)
                                .addGap(97, 97, 97)))
                        .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegLecPmCheckBox)
                            .addComponent(RegLecPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(RegisterLecturerLayout.createSequentialGroup()
                        .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RegLecNameField)
                            .addComponent(RegLecEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(104, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterLecturerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(RegLecBtn)
                .addGap(18, 18, 18)
                .addComponent(RegLecCloseBtn)
                .addGap(28, 28, 28))
        );
        RegisterLecturerLayout.setVerticalGroup(
            RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterLecturerLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegLecNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegLecEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegLecPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PmRoleLabel)
                    .addComponent(RegLecPmCheckBox))
                .addGap(55, 55, 55)
                .addGroup(RegisterLecturerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegLecCloseBtn)
                    .addComponent(RegLecBtn))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jLabel20.setText("Intake Code");

        RegStdNameField.setActionCommand("<Not Set>");

        RegStdBtn.setText("Register");
        RegStdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegStdBtnActionPerformed(evt);
            }
        });

        jLabel21.setText("Password");

        jLabel22.setText("Name");

        jLabel23.setText("Email");

        RegStdEmailField.setToolTipText("");

        RegStdCloseBtn.setText("Close");
        RegStdCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegStdCloseBtnActionPerformed(evt);
            }
        });

        RegStdPassField.setToolTipText("");

        RegStdIntakeField.setToolTipText("");

        javax.swing.GroupLayout RegisterStudentLayout = new javax.swing.GroupLayout(RegisterStudent.getContentPane());
        RegisterStudent.getContentPane().setLayout(RegisterStudentLayout);
        RegisterStudentLayout.setHorizontalGroup(
            RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterStudentLayout.createSequentialGroup()
                .addContainerGap(127, Short.MAX_VALUE)
                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegisterStudentLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RegStdIntakeField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(RegisterStudentLayout.createSequentialGroup()
                        .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RegStdBtn)
                            .addGroup(RegisterStudentLayout.createSequentialGroup()
                                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RegStdPassField)
                                    .addGroup(RegisterStudentLayout.createSequentialGroup()
                                        .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(RegStdNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(RegStdEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(RegStdCloseBtn)
                        .addGap(33, 33, 33))))
        );
        RegisterStudentLayout.setVerticalGroup(
            RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterStudentLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegStdNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegStdEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegStdIntakeField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegStdPassField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(RegisterStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegStdBtn)
                    .addComponent(RegStdCloseBtn))
                .addGap(24, 24, 24))
        );

        SearchLecBtn.setText("Search");
        SearchLecBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchLecBtnActionPerformed(evt);
            }
        });

        DeleteLecturerBtn.setText("Delete");
        DeleteLecturerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteLecturerBtnActionPerformed(evt);
            }
        });

        LecListEditBtn.setText("Edit");
        LecListEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LecListEditBtnActionPerformed(evt);
            }
        });

        jLabel25.setText("Lecturers List");

        LecturerListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "PM"
            }
        ));
        jScrollPane1.setViewportView(LecturerListTable);

        LecListCloseBtn.setText("Close");
        LecListCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LecListCloseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LecturersListLayout = new javax.swing.GroupLayout(LecturersList.getContentPane());
        LecturersList.getContentPane().setLayout(LecturersListLayout);
        LecturersListLayout.setHorizontalGroup(
            LecturersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LecturersListLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(LecturersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(LecturersListLayout.createSequentialGroup()
                        .addComponent(LecturerSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SearchLecBtn)))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LecturersListLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DeleteLecturerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LecListEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LecListCloseBtn)
                .addGap(34, 34, 34))
        );
        LecturersListLayout.setVerticalGroup(
            LecturersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LecturersListLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LecturersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LecturerSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchLecBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LecturersListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteLecturerBtn)
                    .addComponent(LecListEditBtn)
                    .addComponent(LecListCloseBtn))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        SearchStudBtn.setText("Search");
        SearchStudBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchStudBtnActionPerformed(evt);
            }
        });

        DeleteStdBtn.setText("Delete");
        DeleteStdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteStdBtnActionPerformed(evt);
            }
        });

        StdListEditBtn.setText("Edit");
        StdListEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StdListEditBtnActionPerformed(evt);
            }
        });

        StudentListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "Intake Code"
            }
        ));
        jScrollPane2.setViewportView(StudentListTable);

        jLabel26.setText("Students List");

        StdListCloseBtn.setText("Close");
        StdListCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StdListCloseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout StudentsListLayout = new javax.swing.GroupLayout(StudentsList.getContentPane());
        StudentsList.getContentPane().setLayout(StudentsListLayout);
        StudentsListLayout.setHorizontalGroup(
            StudentsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentsListLayout.createSequentialGroup()
                .addGroup(StudentsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StudentsListLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(StudentsListLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(StudentsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(StudentsListLayout.createSequentialGroup()
                                .addComponent(StudentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SearchStudBtn)))))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentsListLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(DeleteStdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StdListEditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(StdListCloseBtn)
                .addGap(30, 30, 30))
        );
        StudentsListLayout.setVerticalGroup(
            StudentsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentsListLayout.createSequentialGroup()
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StudentsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchStudBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StudentsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteStdBtn)
                    .addComponent(StdListEditBtn)
                    .addComponent(StdListCloseBtn))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome Admin");

        RegStdMainBtn.setText("Register Student");
        RegStdMainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegStdMainBtnActionPerformed(evt);
            }
        });

        LecListMainBtn.setText("Lecturers List");
        LecListMainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LecListMainBtnActionPerformed(evt);
            }
        });

        RegLecMainBtn.setText("Register Lecturer");
        RegLecMainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegLecMainBtnActionPerformed(evt);
            }
        });

        StudListMainBtn.setText("Students List");
        StudListMainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudListMainBtnActionPerformed(evt);
            }
        });

        SaveNLogOut.setText("Save changes and log out");
        SaveNLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveNLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StudListMainBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(LecListMainBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RegStdMainBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RegLecMainBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(226, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveNLogOut)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(RegStdMainBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegLecMainBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LecListMainBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StudListMainBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addComponent(SaveNLogOut)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegStdMainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegStdMainBtnActionPerformed
        RegisterStudent.setVisible(true);
        RegisterStudent.setSize(600,400);
    }//GEN-LAST:event_RegStdMainBtnActionPerformed

    private void LecListMainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LecListMainBtnActionPerformed
        LecturersList.setVisible(true);
        LecturersList.setSize(1000,700);
        // Initialize table
        DefaultTableModel lecturersModel = (DefaultTableModel)LecturerListTable.getModel();
        for(int i =0 ; i < lecturers.size() ; i++){{
            String [] tableDataRow = {lecturers.get(i).getID(),lecturers.get(i).getName(),lecturers.get(i).getEmail(), String.valueOf(lecturers.get(i).getPmRole())};
            lecturersModel.addRow(tableDataRow);               
            }
        }
    }//GEN-LAST:event_LecListMainBtnActionPerformed

    private void RegLecMainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegLecMainBtnActionPerformed
        RegisterLecturer.setVisible(true);
        RegisterLecturer.setSize(1000,400);
    }//GEN-LAST:event_RegLecMainBtnActionPerformed

    private void StudListMainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudListMainBtnActionPerformed
        StudentsList.setVisible(true);
        StudentsList.setSize(1000,700);
        // Initialize table
        DefaultTableModel model = (DefaultTableModel)StudentListTable.getModel();
        for(int i =0 ; i < students.size() ; i++){{
            String [] tableDataRow = {students.get(i).getID(),students.get(i).getName(),students.get(i).getEmail(), students.get(i).getIntake()};
            model.addRow(tableDataRow);               
            }
        }
    }//GEN-LAST:event_StudListMainBtnActionPerformed

    private void EditLecUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditLecUpdateBtnActionPerformed
        for (Lecturer lecturer:lecturers){
            if (lecturer.getID().equals(EditLecIDLbl.getText())){
                lecturer.setName(EditLecNameField.getText());
                lecturer.setEmail(EditLecEmailField.getText());
                lecturer.setPassword(EditLecPassField.getText());
                lecturer.setPmRole(EditLecPMCheckBox.isSelected());
                EditLecturer.setVisible(false);
                
                // Reinitialize table
                DefaultTableModel model = (DefaultTableModel)LecturerListTable.getModel();
                model.setRowCount(0);
                for(int i =0 ; i < lecturers.size() ; i++){{
                    String [] tableDataRow = {lecturers.get(i).getID(),lecturers.get(i).getName(),lecturers.get(i).getEmail(), String.valueOf(lecturers.get(i).getPmRole())};
                    model.addRow(tableDataRow);               
                    }
                }
            }
        }
    }//GEN-LAST:event_EditLecUpdateBtnActionPerformed

    private void EditStdUpdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditStdUpdBtnActionPerformed
         for (Student student:students){
            if (student.getID().equals(EditStdIDLbl.getText())){
                student.setName(EditStdNameField.getText());
                student.setEmail(EditStdEmailField.getText());
                student.setPassword(EditStdPassField.getText());
                student.setIntake(EditStdIntakeField.getText());
                EditStudent.setVisible(false);
                
                // Reinitialize table
                DefaultTableModel model = (DefaultTableModel)StudentListTable.getModel();
                model.setRowCount(0);
                for(int i =0 ; i < students.size() ; i++){{
                    String [] tableDataRow = {students.get(i).getID(),students.get(i).getName(),students.get(i).getEmail(), students.get(i).getIntake()};
                    model.addRow(tableDataRow);               
                    }
                }
            }
        }
    }//GEN-LAST:event_EditStdUpdBtnActionPerformed
    
    
    
    
    
    private void RegLecBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegLecBtnActionPerformed
        String name = RegLecNameField.getText();
        String email = RegLecEmailField.getText();
        String password = RegLecPassField.getText();
        String filePath = Lecturerfile;


        // Validate name length (More than 1 )
        if (name.length() > 2){
            // Validate Email check @ and .com
            if (email.contains("@") && email.contains(".com")){
                // Validate Password
                if(password.length() > 2 ){
                    JOptionPane.showMessageDialog(null,"Successfully Registered");
                    int newIntId = Integer.parseInt(lecturers.get(lecturers.size() - 1).getID().substring(2)) + 1;
                    String newId = String.valueOf(newIntId);
                    // make sure new id is two digits
                    if (newId.length() != 2){
                        newId = "0"+ newId;
                    }
                    // add id identifier
                    newId = "LR"+ newId;
                    Lecturer newLecturer = new Lecturer(newId, name, email, password, RegLecPmCheckBox.isSelected());
                    lecturers.add(newLecturer);

                    // Write to text file
                    writeDataToFile(newLecturer, filePath);
                }
                else{
                    JOptionPane.showMessageDialog(null,"Please Fill in password");
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Please Fill in a valid email");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please Fill in a name");
        }   
    }//GEN-LAST:event_RegLecBtnActionPerformed

    
    
    private void RegStdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegStdBtnActionPerformed
        String name = RegStdNameField.getText();
        String email = RegStdEmailField.getText();
        String password = RegStdPassField.getText();
        String intake = RegStdIntakeField.getText();
        String filePath = Studentfile;

        // Validate name length (More than 1 )
        if (name.length() > 2){
            // Validate Email check @ and .com
            if (email.contains("@") && email.contains(".com")){
                // Validate Password
                if(password.length() > 2 ){
                    int newIntId = Integer.parseInt(students.get(students.size() - 1).getID().substring(2)) + 1;
                    String newId = String.valueOf(newIntId);
                    // make sure new id is two digit
                    if (newId.length() != 2){
                        newId = "0"+ newId;
                    }
                    
                    // add id identifier
                    newId = "TP"+ newId;
                    Student newStudent = new Student(newId, name, email, password, intake);
                    students.add(newStudent);

                    // Write to text file
                    writeDataToFile(newStudent, filePath);
                }
                else{
                    JOptionPane.showMessageDialog(null,"Please Fill in password");
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Please Fill in a valid email");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please Fill in a name");
        }
    }//GEN-LAST:event_RegStdBtnActionPerformed

    
    private void writeDataToFile(Object data, String fileName) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName, true))) {
            if (data instanceof Lecturer lecturer) {
                String line = lecturer.getID() + "/ " + lecturer.getName() + "/ " + lecturer.getEmail() + "/ " + lecturer.getPassword() + "/ " + lecturer.getPmRole();
                writer.write(line);
                writer.newLine();
            } else if (data instanceof Student student) {
                String line = student.getID() + "/ " + student.getName() + "/ " + student.getEmail() + "/ " + student.getPassword() + "/ " + student.getIntake();
                writer.write(line);
                writer.newLine();
            }
            JOptionPane.showMessageDialog(null, "Data written to file successfully");
        } catch (IOException e) { // Print the exception stack trace for debugging
            JOptionPane.showMessageDialog(null, "Error writing data to file");
        }
    }
    
    
    
    private void SearchLecBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchLecBtnActionPerformed
        String searchText = LecturerSearchField.getText().trim().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) LecturerListTable.getModel();
        model.setRowCount(0);
        if (searchText.isEmpty()) {

            for (User lecturer : lecturers) {
                String[] tableDataRow = {lecturer.getID(), lecturer.getName(), lecturer.getEmail(), lecturer.getPassword()};
                model.addRow(tableDataRow);
            }
        } else {
            boolean matchFound = false;
            for (User lecturer : lecturers) {
                if (lecturer.getID().toLowerCase().contains(searchText) ||
                    lecturer.getName().toLowerCase().contains(searchText) ||
                    lecturer.getEmail().toLowerCase().contains(searchText)) {
                    String[] tableDataRow = {lecturer.getID(), lecturer.getName(), lecturer.getEmail(), lecturer.getPassword()};
                    model.addRow(tableDataRow);
                    matchFound = true;
                }
            }
            if (!matchFound) {
                // Optionally, handle the case where no matches are found (e.g., show a message)
                System.out.println("No matches found");
            }
        }
    }//GEN-LAST:event_SearchLecBtnActionPerformed

    private void DeleteLecturerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteLecturerBtnActionPerformed
        int selectedRow = LecturerListTable.getSelectedRow();
        if (selectedRow != -1) {
            String selectedID = LecturerListTable.getValueAt(selectedRow, 0).toString();
            // Assuming the ID is in the first column (index 0) of the table
            // You can replace 0 with the actual index of the ID column if it's different

            // Find the lecturer in the ArrayList based on the selected ID
            Lecturer selectedLecturer = null;
            for (Lecturer lecturer : lecturers) {
                if (lecturer.getID().equals(selectedID)) {
                    selectedLecturer = lecturer;
                    break;
                }
            }

            if (selectedLecturer != null) {
                // Confirm deletion with user
                int confirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this lecturer?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                if (confirmDelete == JOptionPane.YES_OPTION) {
                    // Remove the lecturer from the ArrayList
                    lecturers.remove(selectedLecturer);

                    // Remove the row from the table
                    DefaultTableModel model = (DefaultTableModel) LecturerListTable.getModel();
                    model.removeRow(selectedRow);

                    // Delete from the text file
                    deleteDataFromFile(selectedLecturer, Lecturerfile);

                    JOptionPane.showMessageDialog(null, "Lecturer deleted successfully");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selected lecturer not found in the list");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a lecturer first");
        }
    }//GEN-LAST:event_DeleteLecturerBtnActionPerformed

    private void LecListEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LecListEditBtnActionPerformed
        int selectedRow = LecturerListTable.getSelectedRow();
        if (selectedRow != -1) {
            String selectedID = LecturerListTable.getValueAt(selectedRow, 0).toString();
            // Assuming the ID is in the first column (index 0) of the table
            // You can replace 0 with the actual index of the ID column if it's different

            // Find the lecturer in the ArrayList based on the selected ID
            Lecturer selectedLecturer = null;
            for (Lecturer lecturer : lecturers) {
                if (lecturer.getID().equals(selectedID)) {
                    selectedLecturer = lecturer;
                    break;
                }
            }

            if (selectedLecturer != null) {
                // Set the values in the EditLecturer frame
                EditLecIDLbl.setText(selectedLecturer.getID());
                EditLecNameField.setText(selectedLecturer.getName());
                EditLecEmailField.setText(selectedLecturer.getEmail());
                EditLecPassField.setText(selectedLecturer.getPassword());
                EditLecPMCheckBox.setSelected(selectedLecturer.getPmRole());

                // Show the EditLecturer frame
                EditLecturer.setVisible(true);
                EditLecturer.setSize(1000, 700);
            } else {
                JOptionPane.showMessageDialog(null, "Selected lecturer not found in the list");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a lecturer first");
        }
    }//GEN-LAST:event_LecListEditBtnActionPerformed

    
    private void SearchStudBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchStudBtnActionPerformed
        String searchText = StudentSearchField.getText().trim().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) StudentListTable.getModel();
        model.setRowCount(0);
        if (searchText.isEmpty()) {
            for (User student : students) {
                String[] tableDataRow = {student.getID(), student.getName(), student.getEmail(), ((Student) student).getIntake()};
                model.addRow(tableDataRow);
            }
        } else {
            boolean matchFound = false;
            for (User student : students) {
                String id = student.getID().toLowerCase();
                String name = student.getName().toLowerCase();
                String email = student.getEmail().toLowerCase();
                String intake = ((Student) student).getIntake().toLowerCase();  // Ensure you handle null intake values

                if (id.contains(searchText) || name.contains(searchText) || email.contains(searchText) || intake.contains(searchText)) {
                    String[] tableDataRow = {student.getID(), student.getName(), student.getEmail(), intake};
                    model.addRow(tableDataRow);
                    matchFound = true;
                }
            }
            if (!matchFound) {
                System.out.println("No matches found");
                // Optionally, you can show a message or handle the case where no matches are found
            }
        }  
    }//GEN-LAST:event_SearchStudBtnActionPerformed

    private void DeleteStdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteStdBtnActionPerformed
        int selectedRow = StudentListTable.getSelectedRow();
        if (selectedRow != -1) {
            String selectedID = StudentListTable.getValueAt(selectedRow, 0).toString();
            // Assuming the ID is in the first column (index 0) of the table
            // You can replace 0 with the actual index of the ID column if it's different

            // Find the student in the ArrayList based on the selected ID
            User selectedStudent = null;
            for (User student : students) {
                if (student.getID().equals(selectedID)) {
                    selectedStudent = student;
                    break;
                }
            }

            if (selectedStudent != null) {
                // Confirm deletion with user
                int confirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this student?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                if (confirmDelete == JOptionPane.YES_OPTION) {
                    // Remove the student from the ArrayList
                    students.remove(selectedStudent);

                    // Remove the row from the table
                    DefaultTableModel model = (DefaultTableModel) StudentListTable.getModel();
                    model.removeRow(selectedRow);

                    // Delete from the text file
                    deleteDataFromFile(selectedStudent, Studentfile);

                    JOptionPane.showMessageDialog(null, "Student deleted successfully");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selected student not found in the list");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a student first");
        }
    }//GEN-LAST:event_DeleteStdBtnActionPerformed

    
     private void deleteDataFromFile(User data, String fileName) {
        ArrayList<String> lines = new ArrayList<>();
        
        // Read all lines from the file except the line containing the data's ID
        try {
            Files.lines(Paths.get(fileName))
                    .filter(line -> !line.contains(data.getID()))
                    .forEach(lines::add);
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Write the updated lines back to the file
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            for (String line : lines) {
                writer.write(line);
                writer.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    
    private void StdListEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StdListEditBtnActionPerformed
        int selectedRow = StudentListTable.getSelectedRow();
        if (selectedRow != -1) {
            String selectedID = StudentListTable.getValueAt(selectedRow, 0).toString();
            // Assuming the ID is in the first column (index 0) of the table
            // You can replace 0 with the actual index of the ID column if it's different

            // Find the student in the ArrayList based on the selected ID
            User selectedStudent = null;
            for (User student : students) {
                if (student.getID().equals(selectedID)) {
                    selectedStudent = student;
                    break;
                }
            }

            if (selectedStudent != null) {
                // Set the values in the EditStudent frame
                EditStdIDLbl.setText(selectedStudent.getID());
                EditStdNameField.setText(selectedStudent.getName());
                EditStdEmailField.setText(selectedStudent.getEmail());
                EditStdPassField.setText(selectedStudent.getPassword());
                EditStdIntakeField.setText(((Student) selectedStudent).getIntake());
                

                // Show the EditStudent frame
                EditStudent.setVisible(true);
                EditStudent.setSize(1000, 700);
            } else {
                JOptionPane.showMessageDialog(null, "Selected student not found in the list");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a student first");
        }
    }//GEN-LAST:event_StdListEditBtnActionPerformed

    private void RegLecCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegLecCloseBtnActionPerformed
        RegisterLecturer.setVisible(false);
    }//GEN-LAST:event_RegLecCloseBtnActionPerformed

    private void SaveNLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveNLogOutActionPerformed
        FileIO.ExportStudents(students);
        FileIO.ExportLecturer(lecturers);
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SaveNLogOutActionPerformed

    private void RegStdCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegStdCloseBtnActionPerformed
        RegisterStudent.setVisible(false);
    }//GEN-LAST:event_RegStdCloseBtnActionPerformed

    private void EditLecCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditLecCancelBtnActionPerformed
        EditLecturer.setVisible(false);
    }//GEN-LAST:event_EditLecCancelBtnActionPerformed

    private void EditStdCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditStdCancelBtnActionPerformed
        EditStudent.setVisible(false);
    }//GEN-LAST:event_EditStdCancelBtnActionPerformed

    private void LecListCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LecListCloseBtnActionPerformed
        LecturersList.setVisible(false);
    }//GEN-LAST:event_LecListCloseBtnActionPerformed

    private void StdListCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StdListCloseBtnActionPerformed
        StudentsList.setVisible(false);
    }//GEN-LAST:event_StdListCloseBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */      
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteLecturerBtn;
    private javax.swing.JButton DeleteStdBtn;
    private javax.swing.JButton EditLecCancelBtn;
    private javax.swing.JTextField EditLecEmailField;
    private javax.swing.JLabel EditLecIDLbl;
    private javax.swing.JTextField EditLecNameField;
    private javax.swing.JCheckBox EditLecPMCheckBox;
    private javax.swing.JTextField EditLecPassField;
    private javax.swing.JButton EditLecUpdateBtn;
    private javax.swing.JDialog EditLecturer;
    private javax.swing.JButton EditStdCancelBtn;
    private javax.swing.JTextField EditStdEmailField;
    private javax.swing.JLabel EditStdIDLbl;
    private javax.swing.JTextField EditStdIntakeField;
    private javax.swing.JTextField EditStdNameField;
    private javax.swing.JTextField EditStdPassField;
    private javax.swing.JButton EditStdUpdBtn;
    private javax.swing.JDialog EditStudent;
    private javax.swing.JButton LecListCloseBtn;
    private javax.swing.JButton LecListEditBtn;
    private javax.swing.JButton LecListMainBtn;
    private javax.swing.JTable LecturerListTable;
    private javax.swing.JTextField LecturerSearchField;
    private javax.swing.JDialog LecturersList;
    private javax.swing.JLabel PmRoleLabel;
    private javax.swing.JButton RegLecBtn;
    private javax.swing.JButton RegLecCloseBtn;
    private javax.swing.JTextField RegLecEmailField;
    private javax.swing.JButton RegLecMainBtn;
    private javax.swing.JTextField RegLecNameField;
    private javax.swing.JTextField RegLecPassField;
    private javax.swing.JCheckBox RegLecPmCheckBox;
    private javax.swing.JButton RegStdBtn;
    private javax.swing.JButton RegStdCloseBtn;
    private javax.swing.JTextField RegStdEmailField;
    private javax.swing.JTextField RegStdIntakeField;
    private javax.swing.JButton RegStdMainBtn;
    private javax.swing.JTextField RegStdNameField;
    private javax.swing.JTextField RegStdPassField;
    private javax.swing.JDialog RegisterLecturer;
    private javax.swing.JDialog RegisterStudent;
    private javax.swing.JButton SaveNLogOut;
    private javax.swing.JButton SearchLecBtn;
    private javax.swing.JButton SearchStudBtn;
    private javax.swing.JButton StdListCloseBtn;
    private javax.swing.JButton StdListEditBtn;
    private javax.swing.JButton StudListMainBtn;
    private javax.swing.JTable StudentListTable;
    private javax.swing.JTextField StudentSearchField;
    private javax.swing.JDialog StudentsList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
